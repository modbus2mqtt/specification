name: Pull/Run Unit tests

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, edited]
  workflow_call:
permissions:
  contents: write
jobs:
  test:
    runs-on: ubuntu-latest
    name: 'Test E2E'
    steps:
      - uses: actions/checkout@v4
        if: ${{ !github.event.act }} # skip during local actions testing
        with:
          repository: modbus2mqtt/modbus2mqtt.dev
          path: .
      - name: Set up Node.js
        if: ${{ !github.event.act }} # skip during local actions testing
        uses: actions/setup-node@v1
        with:
          node-version: 20.x
      - name: Install mosquitto client
        run: |
          sudo apt update
          sudo apt install -y mosquitto mosquitto-clients
      - name: Wait for other workflow run or continue
        id: init
        run: |
          gh auth status
          ls /etc/nginx
          owner=""
          if [ "${{github.event.act.owner}}" != '' ]
          then
            owner="-o ${{github.event.act.owner}}"
          else
            owner="-o ${{github.repository_owner}}"
          fi
          echo "owner=$owner" >> "$GITHUB_OUTPUT"
          sudo chmod 777 /var/lib/nginx
          bin/pulls.py $owner execorwait --noexec ${{github.event.pull_request.base.repo.name}}:${{github.event.number}} "${{github.event.pull_request.body}}" pullaction >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Execute all tests
        id: execute
        if: steps.init.outputs.type== 'runner'
        run: |
          echo "::group::Init Repositories"
          bin/pulls.py   ${{steps.init.outputs.owner}} init -b main 
          echo "::endgroup::"
          echo "::group::Syncpull: Switch branch to Pull Request"
          bin/pulls.py  ${{steps.init.outputs.owner}} syncpull --pullrequest ${{github.event.pull_request.base.repo.name}}:${{github.event.number}} --pulltext "${{github.event.pull_request.body}}" pull${{github.event.pull_request.number}}
          echo "::endgroup::"          
          echo "::group::packagejson: Package.json may contain no local dependencies"
          bin/pulls.py  ${{steps.init.outputs.owner}} test packagejson
          echo "::endgroup::"          
          echo "::group::dependencies local: Update in package.json to use pull request rather than github main branch"
          bin/pulls.py  ${{steps.init.outputs.owner}} dependencies local
          echo "::endgroup::"
          echo "::group::Build: execute typescript->javascript"
          bin/pulls.py  ${{steps.init.outputs.owner}} build
          echo "::endgroup::"
          echo "::group::Start servers"
          bin/pulls.py ${{steps.init.outputs.owner}} test startServers
          echo "::endgroup::"
          bin/pulls.py ${{steps.init.outputs.owner}} test test
          echo "::group::killServers"
          bin/pulls.py ${{steps.init.outputs.owner}} test killServers
          echo "::endgroup::"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
